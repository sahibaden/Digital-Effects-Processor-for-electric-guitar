const int BL = 41;
const real64_T B[41] = {
0.005345447924205, 0.01298741210162, 0.02365141869453, 0.03803988498466,
0.05153884125436, 0.06243804396013, 0.06492997359104, 0.05732452658374,
0.03683866454798, 0.00645421329026, -0.03021648070556, -0.06456607394503,
-0.08910974034076, -0.09528062015538, -0.07957554079688, -0.04136216962717,
0.01306929664471, 0.07473957505939, 0.130771181182, 0.1703100460777,
0.1842548133304, 0.1703100460777, 0.130771181182, 0.07473957505939,
0.01306929664471, -0.04136216962717, -0.07957554079688, -0.09528062015538,
-0.08910974034076, -0.06456607394503, -0.03021648070556, 0.00645421329026,
0.03683866454798, 0.05732452658374, 0.06492997359104, 0.06243804396013,
0.05153884125436, 0.03803988498466, 0.02365141869453, 0.01298741210162,
0.005345447924205
};
union (Uint32 combo;short channel[2];}temp;
Uint32 LEFT,RIGHT,data;
int a,i;
float passband()
{
while(1)

{
float samples[50];
float result= 0.0;
while(!DSK6713_AIC23_read(hcodec,&data));
for( a = low -1; a>=1 ;a--)
{samples[a]= samples[a-1];
temp.combo=data;
sample[0]= float temp.channel[0];
for(a=0;a<low;a++)
result +=bandpass[a]*samples[a];
ret (output)
}